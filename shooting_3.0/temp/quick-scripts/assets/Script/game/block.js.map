{"version":3,"sources":["block.js"],"names":["Global","require","cc","Class","extends","Component","properties","blastPrefab","default","type","Prefab","explode","blast","_x","node","x","width","_y","y","height","gameData","blastPool","size","get","log","instantiate","getComponent","ParticleSystem","stopSystem","setPosition","parent","resetSystem","scheduleOnce","put","onCollisionEnter","other","self","name","label","getChildByName","Label","datatype","string","active","pack","Number","forceful","color","Color","randomColor","dataxspeed"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,qBAAa;AACTC,qBAAS,IADA;AAETC,kBAAMP,GAAGQ;AAFA;AAFL,KAHP;AAUL;AACAC,WAXK,qBAWK;AACN,YAAIC,QAAQ,IAAZ;AAAA,YACIC,KAAK,KAAKC,IAAL,CAAUC,CAAV,GAAc,KAAKD,IAAL,CAAUE,KAAV,GAAkB,CADzC;AAAA,YAEIC,KAAK,KAAKH,IAAL,CAAUI,CAAV,GAAc,KAAKJ,IAAL,CAAUK,MAAV,GAAmB,CAF1C;AAGA,YAAInB,OAAOoB,QAAP,CAAgBC,SAAhB,CAA0BC,IAA1B,KAAmC,CAAvC,EAA0C;AACtCV,oBAAQZ,OAAOoB,QAAP,CAAgBC,SAAhB,CAA0BE,GAA1B,EAAR;AACH,SAFD,MAEO;AACHrB,eAAGsB,GAAH,CAAO,QAAP;AACAZ,oBAAQV,GAAGuB,WAAH,CAAe,KAAKlB,WAApB,CAAR;AACAK,kBAAMc,YAAN,CAAmBxB,GAAGyB,cAAtB,EAAsCC,UAAtC;AACH;AACDhB,cAAMiB,WAAN,CAAkBhB,EAAlB,EAAsBI,EAAtB;AACAL,cAAMkB,MAAN,GAAe,KAAKhB,IAAL,CAAUgB,MAAzB;AACAlB,cAAMc,YAAN,CAAmBxB,GAAGyB,cAAtB,EAAsCI,WAAtC;AACA,aAAKC,YAAL,CAAkB,YAAM;AACpBhC,mBAAOoB,QAAP,CAAgBC,SAAhB,CAA0BY,GAA1B,CAA8BrB,KAA9B;AACH,SAFD,EAEG,GAFH;AAGH,KA5BI;;AA6BL;AACAsB,oBA9BK,4BA8BYC,KA9BZ,EA8BmBC,IA9BnB,EA8ByB;AAC1B;AACA,YAAID,MAAMrB,IAAN,CAAWuB,IAAX,IAAmB,QAAvB,EAAiC;AAC7B,gBAAIC,QAAQ,KAAKxB,IAAL,CAAUyB,cAAV,CAAyB,SAAzB,EAAoCb,YAApC,CAAiDxB,GAAGsC,KAApD,CAAZ;AACA,gBAAI/B,OAAO,KAAKK,IAAL,CAAU2B,QAArB;AACA,gBAAIH,MAAMI,MAAN,IAAgB,CAApB,EAAuB;AACnB;;;;;;AAMA;AACA;AACA;;AAEA;AACA,qBAAK/B,OAAL;AACA;AACA,qBAAKG,IAAL,CAAU6B,MAAV,GAAmB,KAAnB;AACH,aAfD,MAeO;AACH,oBAAI3C,OAAOoB,QAAP,CAAgBwB,IAAhB,IAAwB,UAA5B,EAAwC;AACpCN,0BAAMI,MAAN,GAAeG,OAAOP,MAAMI,MAAb,IAAuB1C,OAAOoB,QAAP,CAAgB0B,QAAtD;AACA,wBAAIR,MAAMI,MAAN,IAAgB,CAApB,EAAuB;AACnB,6BAAK/B,OAAL;AACA,6BAAKG,IAAL,CAAU6B,MAAV,GAAmB,KAAnB;AACH;AACJ,iBAND,MAMO;AACHL,0BAAMI,MAAN,GAAeG,OAAOP,MAAMI,MAAb,IAAuB,CAAtC;AACH;AACD;AACA,qBAAK5B,IAAL,CAAUiC,KAAV,GAAkB,IAAI7C,GAAG8C,KAAP,CAAahD,OAAOiD,WAAP,CAAmBX,MAAMI,MAAzB,EAAiCjC,IAAjC,CAAb,CAAlB;AAEH;AACJ;AACD;AACA,YAAI0B,MAAMrB,IAAN,CAAWuB,IAAX,IAAmB,MAAvB,EAA+B;AAC3B,iBAAKvB,IAAL,CAAUoC,UAAV,GAAuB,CAAC,KAAKpC,IAAL,CAAUoC,UAAlC;AACH;AAEJ;AAtEI;AAuEL;;AAEA;;AAEA;;AAEA;AA7EJ","file":"block.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\game","sourcesContent":["const Global = require(\"Global\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 生成的粒子资源\r\n        blastPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n    },\r\n    // 粒子爆炸\r\n    explode() {\r\n        let blast = null,\r\n            _x = this.node.x + this.node.width / 2, \r\n            _y = this.node.y - this.node.height / 2;\r\n        if (Global.gameData.blastPool.size() > 0) {\r\n            blast = Global.gameData.blastPool.get();\r\n        } else {\r\n            cc.log('重新创建粒子');\r\n            blast = cc.instantiate(this.blastPrefab);\r\n            blast.getComponent(cc.ParticleSystem).stopSystem();\r\n        }\r\n        blast.setPosition(_x, _y);\r\n        blast.parent = this.node.parent;\r\n        blast.getComponent(cc.ParticleSystem).resetSystem();\r\n        this.scheduleOnce(() => {\r\n            Global.gameData.blastPool.put(blast);\r\n        }, 0.1);\r\n    },\r\n    // 碰撞检测\r\n    onCollisionEnter(other, self) {\r\n        // 子弹碰撞\r\n        if (other.node.name == 'bullet') {\r\n            let label = this.node.getChildByName('boxtext').getComponent(cc.Label);\r\n            let type = this.node.datatype;\r\n            if (label.string == 1) {\r\n                /**\r\n                 * 粒子爆炸一\r\n                 * Auto Remove On 勾上\r\n                 * Play On Load 勾上\r\n                */\r\n\r\n                // let blast = cc.instantiate(this.blastPrefab);\r\n                // blast.setPosition(this.node.x + this.node.width / 2, this.node.y - this.node.height / 2);\r\n                // blast.parent = this.node.parent;\r\n\r\n                // 粒子爆炸二\r\n                this.explode();\r\n                // 方块消失\r\n                this.node.active = false;\r\n            } else {\r\n                if (Global.gameData.pack == 'forceful') {\r\n                    label.string = Number(label.string) - Global.gameData.forceful;\r\n                    if (label.string <= 0) {\r\n                        this.explode();\r\n                        this.node.active = false;\r\n                    }\r\n                } else { \r\n                    label.string = Number(label.string) - 1\r\n                }\r\n                // 改变颜色\r\n                this.node.color = new cc.Color(Global.randomColor(label.string, type));\r\n\r\n            }\r\n        }\r\n        // 碰撞到墙，反弹（废弃）\r\n        if (other.node.name == 'wall') {\r\n            this.node.dataxspeed = -this.node.dataxspeed\r\n        }\r\n\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start () {},\r\n\r\n    // update (dt) {},\r\n});\r\n"]}