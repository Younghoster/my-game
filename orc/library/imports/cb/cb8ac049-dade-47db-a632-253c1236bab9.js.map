{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Game/assets\\Script\\Game\\Ball.js"],"names":["Global","require","colors","mountain","tree","floor","ground","cc","Class","extends","Component","properties","moveBox","default","type","Node","bg2","audioFloor","AudioClip","audioDeath","audioBox","audioBoom","audioBoard","viewScale","node","y","game","wrap","scale","switchColor","key","bgMove","_w","width","sun","getChildByName","cloud","x","bg_speed","bg_count","opacity","runAction","fadeIn","fadeOut","color","hexToColor","restData","num","bone","floorNum","value","getComponent","dragonBones","ArmatureDisplay","timeScale","collisionFloor","gameInfo","state","height","bounce","log","playAnimation","ParticleSystem","stopSystem","gameOver","audioEngine","play","collisionOrc","el","isBoard","destroy","creatOrc","scheduleOnce","collisionStorehouse","collisionBomb","collisionBoard","console","onCollisionEnter","other","self","name","onLoad","start","update","dt"],"mappings":"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","file":"Ball.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Game","sourcesContent":["const Global = require('Global');\r\nconst colors = [\r\n    {\r\n        mountain: '#7D2C1B',\r\n        tree: '#491D12',\r\n        floor: '#75280C',\r\n        ground: '#3D1805',\r\n    },{\r\n        mountain: '#81b68c',\r\n        tree: '#65977a',\r\n        floor: '#e5c282',\r\n        ground: '#2b5748',\r\n    }\r\n]\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 风景移动容器\r\n        moveBox: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 背景容器\r\n        // background: {\r\n        //     default: null,\r\n        //     type: cc.Node\r\n        // },\r\n        bg2:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 音效\r\n        audioFloor: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioDeath: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioBox: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioBoom: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioBoard: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n    // 视觉缩放\r\n    viewScale() {\r\n        // console.log(Global.game.wrap.scale);\r\n        if (this.node.y < 500) return;\r\n        Global.game.wrap.scale = (1110 - 600) / this.node.y;\r\n    },\r\n    switchColor(key) {\r\n        \r\n    },\r\n    // 背景移动\r\n    bgMove() {\r\n        const _w = this.moveBox.width;\r\n        let sun = this.moveBox.getChildByName('sun'),\r\n            tree = this.moveBox.getChildByName('tree'),\r\n            mountain = this.moveBox.getChildByName('mountain'),\r\n            floor = this.moveBox.getChildByName('floor'),\r\n            ground = this.moveBox.getChildByName('ground'),\r\n            cloud = this.moveBox.getChildByName('cloud');\r\n        // 太阳 移动 \r\n        sun.x -= this.bg_speed / 8;\r\n        if (sun.x <= -sun.width) {\r\n            sun.x = _w;\r\n            this.bg_count += 1;\r\n            // console.log('========> 切换背景颜色');\r\n            // 切换背景颜色\r\n            if (this.bg_count == 1) {\r\n                this.bg_count = 0;\r\n                // 判断颜色\r\n                if (sun.opacity == 255) {\r\n                    this.bg2.runAction(cc.fadeIn(0.3));\r\n                    sun.runAction(cc.fadeOut(0.3));\r\n                    cloud.runAction(cc.fadeIn(0.3));\r\n                    mountain.color = cc.hexToColor(colors[1].mountain);\r\n                    tree.color = cc.hexToColor(colors[1].tree);\r\n                    floor.color = cc.hexToColor(colors[1].floor);\r\n                    ground.color = cc.hexToColor(colors[1].ground);\r\n                } else {\r\n                    this.bg2.runAction(cc.fadeOut(0.3));\r\n                    sun.runAction(cc.fadeIn(0.3));\r\n                    cloud.runAction(cc.fadeOut(0.3));\r\n                    mountain.color = cc.hexToColor(colors[0].mountain);\r\n                    tree.color = cc.hexToColor(colors[0].tree);\r\n                    floor.color = cc.hexToColor(colors[0].floor);\r\n                    ground.color = cc.hexToColor(colors[0].ground);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 云移动\r\n        cloud.x -= this.bg_speed / 8;\r\n        if (cloud.x <= -cloud.width) cloud.x = _w;\r\n\r\n        // 山丘移动\r\n        mountain.x -= this.bg_speed / 3;\r\n        if (mountain.x <= -_w) mountain.x = 0;\r\n\r\n        // 树木移动\r\n        tree.x -= this.bg_speed / 2;\r\n        if (tree.x <= -_w) tree.x = 0\r\n\r\n        // gound移动\r\n        ground.x -= this.bg_speed / 1.5;\r\n        if (ground.x <= -_w) ground.x = 0;\r\n    },\r\n    // 重置下参数\r\n    restData(num = 0, bone = false) {\r\n        // 砸地板计数\r\n        this.floorNum = num;\r\n        // 背景移动速度\r\n        if (!bone) this.bg_speed = 16;\r\n        // 衰减值\r\n        this.value = 0.5;\r\n        if (bone) {\r\n            this.node.getChildByName('bone').getComponent(dragonBones.ArmatureDisplay).timeScale = 0.5;\r\n        } else {\r\n            this.node.getChildByName('bone').getComponent(dragonBones.ArmatureDisplay).timeScale = 1;\r\n        }\r\n    },\r\n    // 撞到地板\r\n    collisionFloor() {\r\n        this.floorNum += 5;\r\n        if (this.floorNum >= 25) {\r\n            Global.gameInfo.state = 'over';\r\n            this.node.y = this.node.height / 2;\r\n            this.bounce = 0;\r\n\r\n            cc.log('游戏结束');\r\n            this.node.getChildByName('bone').getComponent(dragonBones.ArmatureDisplay).playAnimation('rockStop', 1);\r\n            this.node.getChildByName('particle').getComponent(cc.ParticleSystem).stopSystem();\r\n            Global.game.gameOver();\r\n        } else {\r\n            this.bounce = 25 - this.floorNum;\r\n        }\r\n\r\n        this.bg_speed =  this.bg_speed / 2;\r\n        \r\n        cc.log('撞到地面', this.floorNum);\r\n        this.restData(this.floorNum, true);\r\n        cc.audioEngine.play(this.audioFloor, false);\r\n    },\r\n\r\n    // 撞到兽人\r\n    collisionOrc(el) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1 || this.isBoard) return; \r\n        // console.log('衰减值=======>', this.value);\r\n        if (this.bounce < 20 && !this.isBoard) this.bounce = 20;       // 上升高度\r\n        el.destroy();\r\n        Global.game.creatOrc();\r\n        this.scheduleOnce(() => {\r\n            if (!this.isBoard) this.restData();\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioDeath, false);\r\n    },\r\n\r\n    // 撞到宝箱\r\n    collisionStorehouse(el) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1) return; \r\n        if (this.bounce < 25) this.bounce = 25;       // 上升高度\r\n        el.destroy();\r\n        this.scheduleOnce(() => {\r\n            this.restData();\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioBox, false);\r\n    },\r\n\r\n    // 撞到炸弹\r\n    collisionBomb(el) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1) return; \r\n        this.bounce = 30;       // 上升高度\r\n        el.destroy();\r\n        this.scheduleOnce(() => {\r\n            this.restData();\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioBoom, false);\r\n    },\r\n\r\n    // 撞到木板\r\n    collisionBoard(el) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1) return; \r\n        this.bounce = 15;       // 上升高度\r\n        this.floorNum = 10;\r\n        el.destroy();\r\n        this.isBoard = true; // 碰到木板\r\n        this.scheduleOnce(() => {\r\n            this.restData(this.floorNum);\r\n            this.isBoard = false;\r\n            console.log('floorNum', this.floorNum);\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioBoard, false);\r\n    },\r\n\r\n    // 碰撞回调\r\n    onCollisionEnter(other, self) {\r\n        // console.log(other.node.name);\r\n        \r\n        switch (other.node.name) {\r\n            case 'floor':\r\n                this.collisionFloor();\r\n                break;\r\n            case 'orc':\r\n                this.collisionOrc(other.node);\r\n                break;\r\n            case 'storehouse':\r\n                this.collisionStorehouse(other.node);\r\n                break;\r\n            case 'bomb':\r\n                this.collisionBomb(other.node);\r\n                break;\r\n            case 'board':\r\n                this.collisionBoard(other.node);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        // 弹力值\r\n        this.bounce = 0;\r\n        this.restData();\r\n        // 背景移动计数\r\n        this.bg_count = 0;\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        if (Global.gameInfo.state == 'running') {\r\n            // 背景移动\r\n            this.bgMove();\r\n\r\n            // 视觉缩放监听\r\n            this.viewScale();\r\n            \r\n            // 第一种\r\n            this.bounce -= 1 * this.value;\r\n            // if (this.bounce >= 0 && this.bounce < 2) this.value = 0.5;\r\n            // if (Math.abs(this.bounce * this.value) >= 20) {\r\n            //     this.node.y += (this.bounce * this.value) / 2;\r\n            //     this.node.y += (this.bounce * this.value) / 2;\r\n            // } else {\r\n            //     this.node.y += this.bounce * this.value;\r\n            // }\r\n            this.node.y += this.bounce;\r\n            // console.log(this.bounce * this.value);\r\n            \r\n            \r\n            // 防止掉落\r\n            if (this.node.y < 0) this.node.y = this.node.width / 2;\r\n        }\r\n    },\r\n});\r\n"]}