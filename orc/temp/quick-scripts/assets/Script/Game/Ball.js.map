{"version":3,"sources":["Ball.js"],"names":["Global","require","colors","mountain","tree","floor","ground","cc","Class","extends","Component","properties","moveBox","default","type","Node","bg2","audioFloor","AudioClip","audioDeath","audioBox","audioBoom","audioBoard","scoreLabel","Label","moneyLabel","viewScale","node","y","game","wrap","scale","colorSwitch","num","transform","key","seq","sequence","fadeOut","callFunc","color","hexToColor","fadeIn","runAction","bgMove","_w","width","sun","getChildByName","cloud","x","bg_speed","gameInfo","level","countToatal","minNumber","console","log","opacity","score_count","value","score","string","restData","bone","floorNum","getComponent","dragonBones","ArmatureDisplay","timeScale","collisionFloor","state","height","bounce","playAnimation","ParticleSystem","stopSystem","gameOver","audioEngine","play","collisionOrc","isBoard","explode","orcPool","put","total","creatOrc","scheduleOnce","collisionStorehouse","destroy","parseInt","Math","random","money","collisionBomb","collisionBoard","onCollisionEnter","other","self","name","onLoad","start","update","dt"],"mappings":"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","file":"Ball.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Game","sourcesContent":["const Global = require('Global');\r\nconst colors = [\r\n    {\r\n        mountain: '#7D2C1B',\r\n        tree: '#491D12',\r\n        floor: '#75280C',\r\n        ground: '#3D1805',\r\n    },{\r\n        mountain: '#81b68c',\r\n        tree: '#65977a',\r\n        floor: '#e5c282',\r\n        ground: '#2b5748',\r\n    }\r\n]\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 风景移动容器\r\n        moveBox: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 背景容器\r\n        // background: {\r\n        //     default: null,\r\n        //     type: cc.Node\r\n        // },\r\n        bg2:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 音效\r\n        audioFloor: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioDeath: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioBox: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioBoom: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        audioBoard: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        // 分数\r\n        scoreLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 金币\r\n        moneyLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    // 视觉缩放\r\n    viewScale() {\r\n        // console.log(Global.game.wrap.scale);\r\n        if (this.node.y < 500) return;\r\n        Global.game.wrap.scale = (1110 - 600) / this.node.y;\r\n    },\r\n\r\n    // 颜色过渡切换\r\n    colorSwitch(mountain, tree, floor, ground, num) {\r\n        function transform(node, key) {\r\n            let seq = cc.sequence(cc.fadeOut(0.3), cc.callFunc(() => {\r\n                node.color = cc.hexToColor(colors[num][key]);\r\n            }), cc.fadeIn(0.3));\r\n            node.runAction(seq);\r\n        }\r\n        transform(mountain, 'mountain');\r\n        transform(tree, 'tree');\r\n        transform(floor, 'floor');\r\n        transform(ground, 'ground');\r\n        \r\n        // mountain.color = cc.hexToColor(colors[num].mountain);\r\n        // tree.color = cc.hexToColor(colors[num].tree);\r\n        // floor.color = cc.hexToColor(colors[num].floor);\r\n        // ground.color = cc.hexToColor(colors[num].ground);\r\n    },\r\n\r\n    // 背景移动\r\n    bgMove() {\r\n        const _w = this.moveBox.width;\r\n        let sun = this.moveBox.getChildByName('sun'),\r\n            tree = this.moveBox.getChildByName('tree'),\r\n            mountain = this.moveBox.getChildByName('mountain'),\r\n            floor = this.moveBox.getChildByName('floor'),\r\n            ground = this.moveBox.getChildByName('ground'),\r\n            cloud = this.moveBox.getChildByName('cloud');\r\n        // 太阳 移动 \r\n        sun.x -= this.bg_speed / 8;\r\n        if (sun.x <= -sun.width) {\r\n            sun.x = _w;\r\n\r\n            // 难度增加\r\n            Global.gameInfo.level = Global.gameInfo.countToatal == Global.gameInfo.minNumber ? Global.gameInfo.level : Global.gameInfo.level + 1;\r\n            console.log('难度增加======>', Global.gameInfo.level);\r\n\r\n            // 判断切换背景颜色\r\n            // console.log('========> 切换背景颜色');\r\n            if (sun.opacity == 255) {\r\n                this.colorSwitch(mountain, tree, floor, ground, 1);\r\n                this.bg2.runAction(cc.fadeIn(0.3));\r\n                sun.runAction(cc.fadeOut(0.3));\r\n                cloud.runAction(cc.fadeIn(0.3));\r\n            } else {\r\n                this.colorSwitch(mountain, tree, floor, ground, 0);\r\n                this.bg2.runAction(cc.fadeOut(0.3));\r\n                sun.runAction(cc.fadeIn(0.3));\r\n                cloud.runAction(cc.fadeOut(0.3));\r\n            }\r\n        }\r\n\r\n        // 分数\r\n        this.score_count += (this.bg_speed / 16) * this.value;\r\n        if (this.score_count >= 2) {\r\n            this.score_count = 0;\r\n            Global.gameInfo.score += 1;\r\n            this.scoreLabel.string = Global.gameInfo.score + 'm';\r\n        }\r\n\r\n        // 云移动\r\n        cloud.x -= this.bg_speed / 8;\r\n        if (cloud.x <= -cloud.width) cloud.x = _w;\r\n\r\n        // 山丘移动\r\n        mountain.x -= this.bg_speed / 3;\r\n        if (mountain.x <= -_w) mountain.x = 0;\r\n\r\n        // 树木移动\r\n        tree.x -= this.bg_speed / 2;\r\n        if (tree.x <= -_w) tree.x = 0\r\n\r\n        // gound移动\r\n        ground.x -= this.bg_speed / 1.5;\r\n        if (ground.x <= -_w) ground.x = 0;\r\n    },\r\n\r\n    // 重置下参数\r\n    restData(num = 0, bone = false) {\r\n        // 砸地板计数\r\n        this.floorNum = num;\r\n        // 背景移动速度\r\n        if (!bone) this.bg_speed = 16;\r\n        // 衰减值\r\n        this.value = 0.5;\r\n        if (bone) {\r\n            this.node.getChildByName('bone').getComponent(dragonBones.ArmatureDisplay).timeScale = 0.5;\r\n        } else {\r\n            this.node.getChildByName('bone').getComponent(dragonBones.ArmatureDisplay).timeScale = 1;\r\n        }\r\n    },\r\n\r\n    // 撞到地板\r\n    collisionFloor() {\r\n        this.floorNum += 5;\r\n        if (this.floorNum >= 25) {\r\n            Global.gameInfo.state = 'over';\r\n            this.node.y = this.node.height / 2;\r\n            this.bounce = 0;\r\n            cc.log('游戏结束');\r\n            this.node.getChildByName('bone').getComponent(dragonBones.ArmatureDisplay).playAnimation('rockStop', 1);\r\n            this.node.getChildByName('particle').getComponent(cc.ParticleSystem).stopSystem();\r\n            Global.game.gameOver();\r\n        } else {\r\n            this.bounce = 25 - this.floorNum;\r\n        }\r\n\r\n        this.bg_speed =  this.bg_speed / 2;\r\n        \r\n        cc.log('撞到地面', this.floorNum);\r\n\r\n        this.restData(this.floorNum, true);\r\n        cc.audioEngine.play(this.audioFloor, false);\r\n    },\r\n\r\n    // 撞到兽人\r\n    collisionOrc(node) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1 || this.isBoard) return; \r\n        // console.log('衰减值=======>', this.value);\r\n        if (this.bounce < 20 && !this.isBoard) this.bounce = 20;       // 上升高度\r\n        \r\n        // 播放溅血粒子\r\n        Global.game.explode(node);\r\n        // 回收兽人\r\n        Global.game.orcPool.put(node);\r\n        \r\n        // 做难度判断是否生成兽人\r\n        if (Global.gameInfo.total - Global.gameInfo.level >= Global.gameInfo.countToatal) {\r\n            Global.game.creatOrc();\r\n        } else {\r\n            console.log('减少一个兽人============>');\r\n            Global.gameInfo.countToatal = Global.gameInfo.countToatal <= Global.gameInfo.minNumber ? Global.gameInfo.minNumber : Global.gameInfo.countToatal - 1;\r\n        }\r\n        \r\n        this.scheduleOnce(() => {\r\n            if (!this.isBoard) this.restData();\r\n        }, 0.01);\r\n        \r\n        cc.audioEngine.play(this.audioDeath, false);\r\n    },\r\n\r\n    // 撞到宝箱\r\n    collisionStorehouse(node) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1) return; \r\n        if (this.bounce < 25) this.bounce = 25;       // 上升高度\r\n        node.destroy();\r\n        \r\n        // 金币更新\r\n        let num = parseInt(10 * Math.random()) + 10;\r\n        Global.gameInfo.money += num;\r\n        this.moneyLabel.string = Global.gameInfo.money;\r\n\r\n        this.scheduleOnce(() => {\r\n            this.restData();\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioBox, false);\r\n    },\r\n\r\n    // 撞到炸弹\r\n    collisionBomb(node) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1) return; \r\n        this.bounce = 30;       // 上升高度\r\n        node.destroy();\r\n        this.scheduleOnce(() => {\r\n            this.restData();\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioBoom, false);\r\n    },\r\n\r\n    // 撞到木板\r\n    collisionBoard(node) {\r\n        if (Global.gameInfo.state == 'over' || this.value <= 1) return; \r\n        this.bounce = 15;       // 上升高度\r\n        this.floorNum = 10;\r\n        node.destroy();\r\n        this.isBoard = true; // 碰到木板\r\n        this.scheduleOnce(() => {\r\n            this.restData(this.floorNum);\r\n            this.isBoard = false;\r\n            console.log('floorNum', this.floorNum);\r\n        }, 0.01);\r\n        cc.audioEngine.play(this.audioBoard, false);\r\n    },\r\n\r\n    // 碰撞回调\r\n    onCollisionEnter(other, self) {\r\n        // console.log(other.node.name);\r\n        \r\n        switch (other.node.name) {\r\n            case 'floor':\r\n                this.collisionFloor();\r\n                break;\r\n            case 'orc':\r\n                this.collisionOrc(other.node);\r\n                break;\r\n            case 'storehouse':\r\n                this.collisionStorehouse(other.node);\r\n                break;\r\n            case 'bomb':\r\n                this.collisionBomb(other.node);\r\n                break;\r\n            case 'board':\r\n                this.collisionBoard(other.node);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        // 弹力值\r\n        this.bounce = 0;\r\n        this.restData();\r\n        // 分数计数（模拟距离）\r\n        this.score_count = 0;\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        if (Global.gameInfo.state == 'running') {\r\n            // 背景移动\r\n            this.bgMove();\r\n\r\n            // 视觉缩放监听\r\n            this.viewScale();\r\n            \r\n            // 第一种\r\n            this.bounce -= 1 * this.value;\r\n            this.node.y += this.bounce;\r\n            // console.log(this.bounce * this.value);\r\n            \r\n            // 防止掉落\r\n            if (this.node.y < 0) this.node.y = this.node.width / 2 + 1;\r\n        }\r\n    },\r\n});\r\n"]}